
CREATE TABLE IF NOT EXISTS users (
  id                  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  login               VARCHAR(50) NOT NULL UNIQUE,
  password_hash       VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS projects (
  id                  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name                VARCHAR(120) NOT NULL,
  description         TEXT NULL,
  owner_id            INTEGER NOT NULL REFERENCES users(id) ON DELETE RESTRICT,
  total_size_bytes    BIGINT NOT NULL DEFAULT 0,
  created_at          TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at          TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1
    FROM   pg_constraint
    WHERE  conname = 'chk_projects_total_size_nonneg'
  ) THEN
    ALTER TABLE projects
      ADD CONSTRAINT chk_projects_total_size_nonneg
      CHECK (total_size_bytes >= 0);
  END IF;
END$$;

CREATE TABLE IF NOT EXISTS project_access (
  id                  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  project_id          INTEGER NOT NULL REFERENCES projects(id) ON DELETE CASCADE,
  user_id             INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  role                VARCHAR(32) NOT NULL
);

DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1
    FROM   pg_constraint
    WHERE  conname = 'uq_project_user'
  ) THEN
    ALTER TABLE project_access
      ADD CONSTRAINT uq_project_user UNIQUE (project_id, user_id);
  END IF;
END$$;

CREATE TABLE IF NOT EXISTS documents (
  id                  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  project_id          INTEGER NOT NULL REFERENCES projects(id) ON DELETE CASCADE,
  filename            TEXT NOT NULL,
  s3_key              TEXT NOT NULL,
  size_bytes          BIGINT,
  uploaded_by         INTEGER REFERENCES users(id) ON DELETE SET NULL,
  uploaded_at         TIMESTAMPTZ NOT NULL DEFAULT NOW()
);